import os
import discord
from discord.ext import commands
import random
import asyncio
# Intents ต้องเปิด message_content ด้วย
intents = discord.Intents.all()
intents.message_content = True  # สำคัญมาก!!
from mysever import server_on

# สร้าง Bot object
bot = commands.Bot(command_prefix='~', intents=discord.Intents.all())

# Event: บอทออนไลน์
@bot.event
async def on_ready():
    print(f'✅ Bot is ready! Logged in as {bot.user}')

# คำสั่ง: -hello
@bot.command()
async def Listcmd(ctx):
    await ctx.send("Here is every single command available for you:~listmembers,~play,~winner,~pick,~info .Descriptions for command above: listmember is to watch every member in the sever, play is used for random team for playing ranked game or custom game, winner is used for random only one dude from the current channel, Pick is used to random n person in current channel")

@bot.command()
async def listmembers(ctx):
    members = ctx.guild.members  # ดึงสมาชิกทั้งหมดในเซิร์ฟเวอร์
    member_names = [member.name for member in members]  # เก็บเฉพาะชื่อ
    result = ", ".join(member_names)  # รวมชื่อเป็น string เดียวคั่นด้วย comma
    await ctx.send(f"Every member in this sever : {member_names}")

@bot.command()
async def info(ctx):
    await ctx.send("This bot is made by jazaza and also generated by chatGPT 4o(Cuz i dunno python bro)")
        
class VCSelector(discord.ui.View):
    def __init__(self, members):
        super().__init__(timeout=60)
        self.members = members

    @discord.ui.select(
        placeholder="🔈 Select vc for team 1 and 2",
        min_values=2,
        max_values=2,
        options=[]  # จะใส่ตอนสร้าง view จริง ๆ
    )
    async def select_vc(self, interaction: discord.Interaction, select: discord.ui.Select):
        vc1_id, vc2_id = select.values
        vc1 = interaction.guild.get_channel(int(vc1_id))
        vc2 = interaction.guild.get_channel(int(vc2_id))
        if not self.members:
            await interaction.response.send_message("❌ No member to random", ephemeral=True)
            return

        # สุ่มคนทั้งหมด แล้วแบ่งครึ่ง
        random.shuffle(self.members)
        half = len(self.members) // 2
        team1 = self.members[:half]
        team2 = self.members[half:]

        for member in team1:
            try:
                await member.move_to(vc1)
            except:
                pass  # ป้องกัน error เช่น permission ไม่พอ

        for member in team2:
            try:
                await member.move_to(vc2)
            except:
                pass

        def fmt(team):
            return "\n".join([f"- {m.display_name}" for m in team]) if team else "Noone"

        await interaction.response.send_message(
            f"✅ All member has moved to listed channel suscessfully!\n\n🔈 **{vc1.name}**\n{fmt(team1)}\n\n🔈 **{vc2.name}**\n{fmt(team2)}"
        )
        self.stop()

class TeamSelector(discord.ui.View):
    @discord.ui.button(label="RANK", style=discord.ButtonStyle.primary)
    async def rank_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        # All users in VC across the server (excluding bots)
        members = [m for m in interaction.guild.members if not m.bot and m.voice]

        if not members:
            await interaction.response.send_message("❌ No one is in a voice channel to pick from.", ephemeral=True)
            return

        # If more than 5, randomly select 5. If 5 or fewer, use all.
        selected_group = random.sample(members, 5) if len(members) > 5 else members

        # Pick one winner from the group
        winner = random.choice(selected_group)

        # Format mention list
        mention_list = "\n".join(f"- {m.mention}" for m in selected_group)

        await interaction.response.send_message(
            f"🎯 Player chosen for **RANK** is: **{winner.mention}**\n\n👥 Candidates:\n{mention_list}"
        )


    @discord.ui.button(label="5V5", style=discord.ButtonStyle.success)
    async def v5_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        members = [m for m in interaction.guild.members if not m.bot and m.voice]
        if not members:
            await interaction.response.send_message("❌ Noone in VC in order to random", ephemeral=True)
            return

        vc_channels = [vc for vc in interaction.guild.voice_channels]
        if len(vc_channels) < 2:
            await interaction.response.send_message("❌ You must have at least 2 players in VC", ephemeral=True)
            return

        options = [
            discord.SelectOption(label=vc.name, value=str(vc.id)) for vc in vc_channels
        ]

        view = VCSelector(members)
        view.select_vc.options = options
        await interaction.response.send_message("🔽 Select VC channel for team 1 and team 2:", view=view, ephemeral=True)
        
@bot.command()
async def play(ctx):
    view = TeamSelector()
    await ctx.send("🎮 Select sorting mode:", view=view)

    
@bot.command()
async def winner(ctx):
    user = ctx.author

    if not user.voice or not user.voice.channel:
        await ctx.send("❌ You must in VC first befor random")
        return

    vc = user.voice.channel
    members = [m for m in vc.members if not m.bot]

    if not members:
        await ctx.send(f"❌ Noone in the vc: {vc.name}")
        return

    winner = random.choice(members)
    await ctx.send(f"🎉 The winner of **{vc.name}** is: {winner.mention}")

@bot.command()
async def pick(ctx):
    user = ctx.author

    # ✅ Check if the user is in a voice channel
    if not user.voice or not user.voice.channel:
        await ctx.send("❌ You must be in a voice channel to use this command.")
        return

    vc = user.voice.channel
    members = [m for m in vc.members if not m.bot]

    if not members:
        await ctx.send(f"❌ No members found in voice channel **{vc.name}**.")
        return

    await ctx.send("How many people do you want to pick? (Reply with a number within 30 seconds)")

    def check(m):
        return m.author == ctx.author and m.channel == ctx.channel and m.content.isdigit()

    try:
        msg = await bot.wait_for("message", timeout=30.0, check=check)
        number = int(msg.content)
        count = min(number, len(members))

        if count <= 0:
            await ctx.send("❌ Please enter a number greater than 0.")
            return

        selected = random.sample(members, count)
        result = "\n".join(f"- {m.display_name}" for m in selected)

        await ctx.send(f"🎯 Randomly selected {count} member(s) from **{vc.name}**:\n{result}")

    except asyncio.TimeoutError:
        await ctx.send("⏰ Time’s up! Please run the command again.")




server_on
# รันบอท
bot.run(os.getenv('token'))
